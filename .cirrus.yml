env:
  CIRRUS_CLONE_DEPTH: 1
  VT_TYPE: qemu

fedora_35_task:
  container:
    image: quay.io/avocado-framework/avocado-vt-ci-fedora-35
    kvm: true
  env:
    matrix:
      # Get deps from setup.py (therefor pip version of avocado)
      - AVOCADO_SRC:
      # Older LTS release is 92.x
      - AVOCADO_SRC: avocado-framework<93.0
      # Latest LTS release is 103.x
      - AVOCADO_SRC: avocado-framework<104.0
    matrix:
      - SETUP: setup.py develop --user
      - SETUP: -m pip install .
      - SETUP: -m pip install PYPI_UPLOAD/*.whl
    matrix:
      - VT_TYPE: qemu
      - VT_TYPE: libvirt
  build_script: &build_scr
    - (echo $SETUP | grep -v PYPI_UPLOAD) || make pypi
  setup_script: &setup_scr
    - python3 --version
    - test -z $AVOCADO_SRC || python3 -m pip install $AVOCADO_SRC
    - python3 $SETUP
  bootstrap_script: &bootstrap_scr
    # Pin the versions of tp-qemu and tp-libvirt to known working versions.
    # These versions can be bumped at any time, but provide better understanding
    # of regressions or version update requirements on the test providers side.
    - python3 -c "from virttest.asset import ConfigLoader; cl = ConfigLoader('virttest/test-providers.d/io-github-autotest-qemu.ini'); cl.set('provider', 'ref', '33ed9b0ac6e4255877ff109a1d91fa84c9097dc5'); cl.save()"
    - python3 -c "from virttest.asset import ConfigLoader; cl = ConfigLoader('virttest/test-providers.d/io-github-autotest-libvirt.ini'); cl.set('provider', 'ref', 'e6af7700f879fe1547bfb1421439121d35c919bd'); cl.save()"
    - python3 -m avocado vt-bootstrap --vt-type=$VT_TYPE --vt-skip-verify-download-assets --yes-to-all
  list_script: &list_scr
    - PATH=~/.local/bin:$PATH python3 -m avocado list --vt-save-config=/tmp/config --vt-type=$VT_TYPE -- boot | tee /tmp/list
    - test $VT_TYPE == "qemu" || test $(wc -l < /tmp/list) -gt 50
    - test $VT_TYPE == "libvirt" || test $(wc -l < /tmp/list) -eq 1
    - PATH=~/.local/bin:$PATH python3 -m avocado list --vt-config=/tmp/config --vt-type=$VT_TYPE -- boot | tee /tmp/list_from_config
    - diff /tmp/list /tmp/list_from_config
    - python3 -m avocado vt-list-guests --vt-type=$VT_TYPE
    - python3 -m avocado vt-list-archs --vt-type=$VT_TYPE
  dry_run_script: &dry_run_scr
    - PATH=~/.local/bin:$PATH python3 -m avocado --show all run --vt-type=$VT_TYPE --dry-run -- io-github-autotest-qemu.boot
  run_tests_script: &run_tests_scr
    - test $VT_TYPE == "libvirt" || PATH=$HOME/.local/bin:$PATH python3 -m avocado --show all run --vt-type=$VT_TYPE --vt-extra-params nettype=user -- io-github-autotest-qemu.boot io-github-autotest-qemu.qemu_disk_img.convert.base_to_raw io-github-autotest-qemu.commit_with_backing.default

centos_8_1_task:
  container:
    image: quay.io/avocado-framework/avocado-vt-ci-centos-8.1
  env:
    matrix:
      # Older LTS release is 92.x
      - AVOCADO_SRC: avocado-framework<93.0
      # Latest LTS release is 103.x
      - AVOCADO_SRC: avocado-framework<104.0
    matrix:
      - SETUP: setup.py develop --user
      - SETUP: -m pip install .
  setup_script:
    *setup_scr
  bootstrap_script:
    *bootstrap_scr
  list_script:
    *list_scr
  dry_run_script:
    *dry_run_scr

avocado_devel_task:
  container:
    image: quay.io/avocado-framework/avocado-vt-ci-fedora-35
    kvm: true
  env:
    matrix:
      # Latest Avocado
      - AVOCADO_SRC: git+https://github.com/avocado-framework/avocado#egg=avocado_framework
      # 92lts tree (from where new 92.x releases will come)
      - AVOCADO_SRC: git+https://github.com/avocado-framework/avocado@92lts#egg=avocado_framework
      # 103lts tree (from where new 103.x releases will come)
      - AVOCADO_SRC: git+https://github.com/avocado-framework/avocado@103lts#egg=avocado_framework
    matrix:
      - SETUP: setup.py develop --user
      - SETUP: -m pip install .
      - SETUP: -m pip install PYPI_UPLOAD/*.whl
    matrix:
      - VT_TYPE: qemu
      - VT_TYPE: libvirt
  build_script:
    *build_scr
  setup_script:
    *setup_scr
  bootstrap_script:
    *bootstrap_scr
  list_script:
    *list_scr
  dry_run_script:
    *dry_run_scr
  run_tests_script:
    *run_tests_scr
