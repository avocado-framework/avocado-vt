# Configurations of different conversion targets.
# Please replace the example params with actual values.

variants:
    - dest_null:
        output_mode = null
        target = null
        network = default
        bridge = virbr0
    - dest_json:
        output_mode = json
        target = json
        network = default
        bridge = virbr0
    - dest_local:
        output_mode = local
        target = local
        network = default
        bridge = virbr0
    - dest_none:
        pool_type = dir
        pool_name = default
        pool_target = v2v_default
    - dest_libvirt:
        output_mode = libvirt
        target = libvirt
        network = default
        bridge = virbr0
        pool_type = dir
        pool_name = v2v_dir
        pool_target = v2v_dir_pool
        output_storage = ${pool_name}
    - dest_rhev:
        # Output source of ovirt engine, storage and network
        output_mode = rhev
        # output_method is used to control the way upload guest's image
        # to ovirt. It has two values, "rhev" and "rhv_upload". The
        # default is "rhev".
        #
        # Usage:
        # rhv_upload:
        #     - In V2V command, it is "-o rhv-upload".
        #       When output_method is "rhv_upload", the images will be
        #       uploaded to data domain directly, and the vm will be
        #       created automatically when uploading finishes. when the
        #       VM is deleted, the VM's disk will be removed from data
        #       domain with the VM.
        # rhev:
        #     - In V2V command, it is "-o rhv" or "-o rhev".
        #       When output_method is "rhev", the images will be uploaded
        #       to export domain at first. You still need to import the VM
        #       manually. When the VM is deleted, the disk in export domain
        #       will not be deleted automatically. You need to delete it
        #       by yourself.
        #
        # You can refer to man page of virt-v2v for details.
        output_method = rhev
        target = ovirt
        network = OVIRT_NODE_NETWORK_V2V_EXAMPLE
        bridge = OVIRT_NODE_BRIDGE_V2V_EXAMPLE
        ovirt_engine_url = https://OVIRT_ENGINE_URL_V2V_EXAMPLE/api
        ovirt_engine_user = OVIRT_ENGINE_USER_V2V_EXAMPLE
        ovirt_engine_password = OVIRT_ENGINE_PASSWORD_V2V_EXAMPLE
        # Libvirt SASL authencation(under VDSM control)
        sasl_user = v2v_tester@ovirt
        sasl_pwd = v2v_tester_pwd
        remote_preprocess = yes
        remote_node_user = root
        remote_node_password = RHV_NODE_PASSWORD
        remote_user = ${remote_node_user}
        remote_pwd = ${remote_node_password}
        ovirt_ca_file_path = "/etc/pki/ovirt-engine/ca.pem"
        local_ca_file_path = "/tmp/rhv_upload_ca.pem"
        variants:
            - NFS:
                storage = NFS_EXPORT_STORAGE_V2V_EXAMPLE
                export_name = NFS_EXPORT_NAME_V2V_EXAMPLE
                storage_name = NFS_STORAGE_NAME_V2V_EXAMPLE
                cluster_name = NFS_CLUSTER_NAME_V2V_EXAMPLE
                ovirt_node_address = NFS_OVIRT_NODE_ADDRESS_V2V_EXAMPLE
            - FC:
                storage = FC_EXPORT_STORAGE_V2V_EXAMPLE
                export_name = FC_EXPORT_NAME_V2V_EXAMPLE
                storage_name = FC_STORAGE_NAME_V2V_EXAMPLE
                cluster_name = FC_CLUSTER_NAME_V2V_EXAMPLE
                ovirt_node_address = FC_OVIRT_NODE_ADDRESS_V2V_EXAMPLE
            - ISCSI:
                storage = ISCSI_EXPORT_STORAGE_V2V_EXAMPLE
                export_name = ISCSI_EXPORT_NAME_V2V_EXAMPLE
                storage_name = ISCSI_STORAGE_NAME_V2V_EXAMPLE
                cluster_name = ISCSI_CLUSTER_NAME_V2V_EXAMPLE
                ovirt_node_address = ISCSI_OVIRT_NODE_ADDRESS_V2V_EXAMPLE
        output_storage = ${storage}
        remote_node_address = ${ovirt_node_address}
        remote_ip = ${remote_node_address}
